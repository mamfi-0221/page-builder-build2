{"version":3,"sources":["../src/DocumentList.js"],"names":["schemaTypeNames","schema","getTypeNames","DocumentList","React","Component","documents","loading","error","props","query","limit","apiVersion","assembleQuery","assembledQuery","params","unsubscribe","subscription","subscribe","next","setState","slice","queryParams","types","order","documentTypes","filter","typeName","schemaType","get","type","name","componentWillUnmount","render","title","showCreateButton","createButtonText","state","styles","container","header","content","message","map","doc","_type","_id","id","link","length","footer","PropTypes","string","arrayOf","object","number","bool"],"mappings":"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","sourcesContent":["/* eslint-disable complexity */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport {IntentLink} from 'part:@sanity/base/router'\nimport SanityPreview from 'part:@sanity/base/preview'\nimport Spinner from 'part:@sanity/components/loading/spinner'\nimport schema from 'part:@sanity/base/schema'\nimport IntentButton from 'part:@sanity/components/buttons/intent'\nimport {List, Item} from 'part:@sanity/components/lists/default'\nimport {getPublishedId} from 'part:@sanity/base/util/draft-utils'\nimport {intersection} from 'lodash'\nimport {getSubscription} from './sanityConnector'\nimport styles from './DocumentList.css'\n\nconst schemaTypeNames = schema.getTypeNames()\n\nclass DocumentList extends React.Component {\n\n  state = {\n    documents: null,\n    loading: true,\n    error: null\n  }\n\n  static propTypes = {\n    title: PropTypes.string,\n    types: PropTypes.arrayOf(PropTypes.string),\n    query: PropTypes.string,\n    queryParams: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n    order: PropTypes.string,\n    limit: PropTypes.number,\n    showCreateButton: PropTypes.bool,\n    createButtonText: PropTypes.string,\n    apiVersion: PropTypes.string\n  }\n\n  static defaultProps = {\n    title: 'Last created',\n    order: '_createdAt desc',\n    limit: 10,\n    types: null,\n    query: null,\n    queryParams: {},\n    showCreateButton: true,\n    createButtonText: null,\n    apiVersion: 'v1'\n  }\n\n  componentDidMount = () => {\n    const {query, limit, apiVersion} = this.props\n    const {assembledQuery, params} = this.assembleQuery()\n    if (!assembledQuery) {\n      return\n    }\n\n    this.unsubscribe()\n    this.subscription = getSubscription(assembledQuery, params, apiVersion)\n      .subscribe({\n        next: documents =>\n          this.setState({documents: documents.slice(0, limit), loading: false}),\n        error: error =>\n          this.setState({error, query, loading: false})\n      })\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe()\n  }\n\n  unsubscribe() {\n    if (this.subscription) {\n      this.subscription.unsubscribe()\n    }\n  }\n\n  assembleQuery = () => {\n    const {query, queryParams, types, order, limit} = this.props\n    if (query) {\n      return {assembledQuery: query, params: queryParams}\n    }\n\n    const documentTypes = schemaTypeNames.filter(typeName => {\n      const schemaType = schema.get(typeName)\n      return schemaType.type && schemaType.type.name === 'document'\n    })\n\n    return {\n      assembledQuery: `*[_type in $types] | order(${order}) [0...${limit * 2}]`,\n      params: {types: types ? intersection(types, documentTypes) : documentTypes}\n    }\n  }\n\n\n  render() {\n    const {title, types, showCreateButton, createButtonText} = this.props\n    const {documents, loading, error} = this.state\n\n    return (\n      <div className={styles.container}>\n        <header className={styles.header}>\n          <h2 className={styles.title}>{title}</h2>\n        </header>\n        <div className={styles.content}>\n          {error && <div>{error.message}</div>}\n          {!error && loading && <Spinner center message=\"Loading...\" />}\n          {(!error && !documents && !loading) && <div>Could not locate any documents :/</div>}\n          <List>\n            {documents && documents.map(doc => {\n              const type = schema.get(doc._type)\n              return (\n                <Item key={doc._id}>\n                  <IntentLink\n                    intent=\"edit\"\n                    params={{\n                      type: doc._type,\n                      id: getPublishedId(doc._id)\n                    }}\n                    className={styles.link}\n                  >\n                    <SanityPreview layout=\"default\" type={type} value={doc} key={doc._id} />\n                  </IntentLink>\n                </Item>\n              )\n\n            })}\n          </List>\n        </div>\n        {types && types.length === 1 && showCreateButton && (\n          <div className={styles.footer}>\n            <IntentButton bleed color=\"primary\" kind=\"simple\" intent=\"create\" params={{type: types[0]}}>\n              {createButtonText || `Create new ${types[0]}`}\n            </IntentButton>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default DocumentList\n"],"file":"DocumentList.js"}